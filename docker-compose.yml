version: "3.9"

services:
  db:
    image: postgres:16
    container_name: chatables_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: chatables_backend
    depends_on:
      - db
    environment:
      # Prisma & DB
      DATABASE_URL: postgresql://postgres:postgres@db:5432/postgres

      # Backend-specific envs
      PORT: 3000
      JWT_AUTH_SECRET: JWT_AUTH_SECRET

      # Cloudinary
      CLOUDINARY_API_NAME: dtmrwsnag
      CLOUDINARY_API_KEY: 463889935643194
      CLOUDINARY_API_SECRET: yBY1LOGiTAQDV9UDDv3QYDkeId8
      CLOUDINARY_URL: cloudinary://CLOUDINARY_API_KEY:CLOUDINARY_API_SECRET@dtmrwsnag

      # Frontend URL (CORS etc.)
      FRONTEND_URL: http://localhost:5173
    command: >
      sh -c "
        echo 'Waiting for Postgres...';
        until pg_isready -h db -p 5432 -U postgres >/dev/null 2>&1; do sleep 1; done;
        echo 'Postgres ready â€” running prisma migrate dev';
        npx prisma migrate dev --name init || true;
        echo 'Running prisma generate';
        npx prisma generate;
        echo 'Starting backend server';
        npm run dev;
      "
    ports:
      - "3000:3000"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: chatables_frontend
    depends_on:
      - backend
    environment:
      # Tell frontend how to talk to backend inside docker
      VITE_API_URL: http://backend:3000/api
    ports:
      - "5173:5173"

volumes:
  db_data:
